{
	autofocus_id: "7A4FF3976EB91CEB"
	default_hide_dependency_lines: false
	default_quest_shape: "gear"
	filename: "applied_energistics_2"
	group: "205034DE57B28B09"
	icon: {
		Count: 1
		ForgeCaps: {
			"celestisynth:celestisynthitemstackcapabilities": {
				cs.aquaSkin: 0
			}
		}
		id: "ae2:controller"
	}
	id: "34633DCECF1920EB"
	order_index: 4
	quest_links: [ ]
	quests: [
		{
			dependencies: ["4AA5047E39931F84"]
			description: [
				"Getting started with Applied Energistics 2, from here on referred to as \"ae2\" is a bit different in the MCC world. Meteors no longer spawn in the world being the first thing of note. Craft yourself a quartz wrench, and over the course of the next few chapters, you will find all the information needed to track down resources normally obtained from locating meteorites. (Hint: We hope you've made an &6energizer&r set-up). "
				""
				"The only other major change of note is the limitations of channels having been doubled from the default standard: "
				""
				"each section of basic ME cable as well as ad-hoc networks can support up to 16 channels."
				""
				"Dense ME cable can support up to 64 channels . "
			]
			icon: {
				Count: 1
				ForgeCaps: {
					"celestisynth:celestisynthitemstackcapabilities": {
						cs.aquaSkin: 0
					}
				}
				id: "ae2:nether_quartz_wrench"
			}
			id: "2ED038A81358A49E"
			rewards: [
				{
					id: "2A4068C5C7256130"
					type: "xp"
					xp: 10
				}
				{
					count: 2
					id: "2C111985EB6714A8"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			size: 1.5d
			subtitle: "Advanced logistics solutions."
			tasks: [
				{
					id: "2028C937F7767E45"
					title: "Getting started with Ae2"
					type: "checkmark"
				}
				{
					id: "38903810689BD801"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "itemfilters:tag"
						tag: {
							value: "ae2:quartz_wrench"
						}
					}
					title: "Any #ae2:quartz_wrench"
					type: "item"
				}
			]
			title: "Welcome to Applied Energistics 2!"
			x: 0.0d
			y: 0.0d
		}
		{
			dependencies: ["2ED038A81358A49E"]
			description: [
				"With meteors no longer ruining the beautiful terrain, this leads to an interesting question of \"how do i get certus?\""
				""
				"&eEnergizing&r"
				""
				"Energize a &3block of quartz&r with &64Kfe&r to convert it into damaged budding certus quartz. From here you will need to use \"in-world transformation\" recipes to obtain higher quality blocks. This is also a means for converting &7stone&r into &8sky stone&r, although placing an annhilation plane face up at build limit still works just the same. "
				""
				"&aYes&r, you can make &bflawless budding certus blocks&r in this pack, although the recipe is a little bit more expensive than the usual transformation for lesser quality blocks."
				""
				"(&eit's much easier if you use some of your first certus gathered to make a chicken or bee for this.&r) "
			]
			id: "64D7B14BB546AA95"
			rewards: [
				{
					id: "1ACB2A36A445CB47"
					type: "xp"
					xp: 25
				}
				{
					id: "3B24AED4E7FE5ACE"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
			]
			subtitle: "Gotta start somewhere."
			tasks: [
				{
					id: "5D7EAF90ADCF4697"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:damaged_budding_quartz"
					}
					type: "item"
				}
				{
					id: "373FCAD95DC22B4F"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:sky_stone_block"
					}
					type: "item"
				}
			]
			title: "Energizing quartz and stone"
			x: 0.0d
			y: -1.5d
		}
		{
			dependencies: ["64D7B14BB546AA95"]
			id: "3F7AFC22A9E414A8"
			rewards: [
				{
					id: "0AD61C09140C99FB"
					type: "xp"
					xp: 15
				}
				{
					count: 2
					id: "7F96BD9E031C700B"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			tasks: [{
				id: "3F0F240539CF4573"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:chipped_budding_quartz"
				}
				type: "item"
			}]
			x: 0.0d
			y: -2.5d
		}
		{
			dependencies: ["3F7AFC22A9E414A8"]
			id: "23FB30854CA7BAF9"
			rewards: [
				{
					id: "406F937F1E62F2E2"
					type: "xp"
					xp: 15
				}
				{
					count: 3
					id: "73B61847C3C7A9A7"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			tasks: [{
				id: "3009D558B62EC8AB"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:flawed_budding_quartz"
				}
				type: "item"
			}]
			x: 0.0d
			y: -3.5d
		}
		{
			dependencies: ["23FB30854CA7BAF9"]
			id: "0437844BA6E8DB96"
			rewards: [
				{
					id: "42F322888463BAD6"
					type: "xp"
					xp: 20
				}
				{
					id: "5E0AA195152D8A8B"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
			]
			tasks: [{
				id: "3FB12718A95E0B2E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:flawless_budding_quartz"
				}
				type: "item"
			}]
			x: 0.0d
			y: -4.5d
		}
		{
			dependencies: ["64D7B14BB546AA95"]
			description: ["You can go the route of in-world transformation, or if you have already set up for bee keeping, this will probably be a better route than growing and harvesting crystals the old fashioned way, it's up to you."]
			id: "18247C2CCD71DF3D"
			rewards: [{
				id: "4866A8CE5591069F"
				type: "xp"
				xp: 20
			}]
			subtitle: "#1 of 2 easier ways to obtain certus"
			tasks: [{
				icon: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "productivebees:spawn_egg_configurable_bee"
					tag: {
						EntityTag: {
							type: "productivebees:spacial"
						}
					}
				}
				id: "43B0A31AD059CDDF"
				observe_type: 5
				timer: 0L
				title: "Make a certus bee"
				to_observe: "productivebees:spatial"
				type: "observation"
			}]
			title: "Spatial (certus) Bee"
			x: -1.0d
			y: -2.5d
		}
		{
			dependencies: ["64D7B14BB546AA95"]
			description: ["You can go the route of in-world transformation, or if you have already set up for roosting chickens, this will probably be a better route than growing and harvesting crystals the old fashioned way, it's up to you."]
			id: "4082E16DA772705A"
			rewards: [{
				id: "45F2AAF526867ED2"
				type: "xp"
				xp: 20
			}]
			subtitle: "#2 of 2 easier ways to obtain certus"
			tasks: [{
				id: "500FA57E6FB9D257"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "chicken_roost:c_certusquartz"
					tag: { }
				}
				type: "item"
			}]
			x: 1.0d
			y: -2.5d
		}
		{
			dependencies: ["64D7B14BB546AA95"]
			description: ["Certus quartz is the primary resource utilized by the mod, at least in the early stages. Now that you have access to certus crystals and therefor dust, now it's time to work towards charging it."]
			id: "55B45DFB8B74400C"
			rewards: [
				{
					id: "62732734734BD5BA"
					type: "xp"
					xp: 20
				}
				{
					count: 6
					id: "0020C730893F4850"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Everything works normally from here!"
			tasks: [{
				id: "50C06B3486D53FAE"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:certus_quartz_crystal"
				}
				type: "item"
			}]
			x: 0.0d
			y: 3.5d
		}
		{
			dependencies: ["55B45DFB8B74400C"]
			description: [
				"When provided with power and certus quartz crystals, the charger.. well... charges them."
				""
				"This can also be accomplished via tesla coil charging if you prefer the Create route!"
			]
			id: "1F8E11D7CAFA5B63"
			rewards: [
				{
					id: "0BBCE6B6E4932684"
					type: "xp"
					xp: 15
				}
				{
					count: 4
					id: "3385B25B98848594"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Charging certus"
			tasks: [{
				id: "2DB4D521FFB9473D"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:charger"
				}
				type: "item"
			}]
			x: 1.5d
			y: 5.0d
		}
		{
			dependencies: ["1F8E11D7CAFA5B63"]
			id: "58738104E3AA3732"
			tasks: [{
				id: "2AC180FEC3F1C2D8"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "expatternprovider:ex_charger"
				}
				type: "item"
			}]
			x: 2.5d
			y: 6.0d
		}
		{
			dependencies: ["55B45DFB8B74400C"]
			description: [
				"Inscribers have 2 primary uses:"
				" "
				"Turning various materials to &6dust&r."
				""
				"as well as..."
				""
				"inscribing&e circuits&r and &9processors&r. "
				""
				"To do this you will need to insert the prerequisite press for the circuit or processor needed. It is advisable to set up a dedicated inscriber for each, at least early on."
			]
			id: "7A4FF3976EB91CEB"
			rewards: [
				{
					id: "1D1DAD6783B26586"
					type: "xp"
					xp: 15
				}
				{
					count: 4
					id: "2CE070B25232F6DC"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Dusts, circuits and processors"
			tasks: [{
				id: "6E7C6E625C42AB5E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:inscriber"
				}
				type: "item"
			}]
			x: -1.5d
			y: 5.0d
		}
		{
			dependencies: ["7A4FF3976EB91CEB"]
			id: "1C98BDF8B12F1341"
			tasks: [{
				id: "67E4BC731114F069"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "expatternprovider:ex_inscriber"
				}
				type: "item"
			}]
			x: -2.5d
			y: 6.0d
		}
		{
			dependencies: ["2ED038A81358A49E"]
			description: ["Made with 16x&3 nether quartz&r, 4 stone and 1 precision mechanism."]
			id: "7EF66B49E69B57E0"
			rewards: [
				{
					id: "7885807866487099"
					type: "xp"
					xp: 15
				}
				{
					count: 6
					id: "7699BDC97A58897A"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Mechanical Crafting"
			tasks: [{
				id: "79949391C147392D"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:silicon_press"
				}
				type: "item"
			}]
			x: -2.0d
			y: 2.0d
		}
		{
			dependencies: ["2ED038A81358A49E"]
			description: ["Made with 16x &6gold ingots&r, 4 stone and 1 precision mechanism."]
			id: "757A217506F440A2"
			rewards: [
				{
					id: "684DE145BBE385A6"
					type: "xp"
					xp: 15
				}
				{
					count: 6
					id: "4F48AD846C7BEDBB"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Mechanical Crafting"
			tasks: [{
				id: "189BB55180C35EC6"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:logic_processor_press"
				}
				type: "item"
			}]
			x: -1.0d
			y: 2.0d
		}
		{
			dependencies: ["2ED038A81358A49E"]
			description: ["Made with 16x &7iron ingots&r, 4 stone and 1 precision mechanism."]
			id: "22891E06BE664695"
			rewards: [
				{
					id: "203F30158CFF283E"
					type: "xp"
					xp: 15
				}
				{
					count: 6
					id: "57BB8129FBA530C0"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Mechanical Crafting"
			tasks: [{
				id: "148FB2D52E8CEDF2"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:calculation_processor_press"
				}
				type: "item"
			}]
			x: 1.0d
			y: 2.0d
		}
		{
			dependencies: ["2ED038A81358A49E"]
			description: ["Made with 16x &bdiamonds&r, 4 stone and 1 precision mechanism."]
			id: "7F7D5A012187CF4F"
			rewards: [
				{
					id: "716CB901E2FCC1C7"
					type: "xp"
					xp: 15
				}
				{
					count: 6
					id: "250724DB94D61637"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Mechanical Crafting"
			tasks: [{
				id: "2A024E686EBF264E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:engineering_processor_press"
				}
				type: "item"
			}]
			x: 2.0d
			y: 2.0d
		}
		{
			dependencies: ["7A4FF3976EB91CEB"]
			description: [
				"One of the major differences you will notice if new to the swing of things is that ae2 uses its own native power, &dAE&r. While the ME Controller for a network can accept FE/RF directly, this is only true of the controllers, chargers, inscribers and the energy acceptor. Everything else requires &dAE&r."
				""
				"in short &cdo not&r try to power your storage system components directly with FE/RF. Feed power into an &6energy acceptor&r or directly into the controller(s). Then connect and power the rest of the network from there."
			]
			id: "4F9B5850D630B7C2"
			subtitle: "Powering your first network"
			tasks: [{
				id: "0EAE75638B3C208F"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:energy_acceptor"
				}
				type: "item"
			}]
			x: -3.0d
			y: 4.5d
		}
		{
			dependencies: ["55B45DFB8B74400C"]
			description: [
				"&dFluix crystals&r are going to be one of the most important resources for building your network. Fluix is used for crafting &3network cabling&r as well as most components and machines."
				""
				"This will be a heavily used resource, be it birds, bees or mechanically speaking, you will want to automate this process."
				""
				"To make your first batch of &dfluix crystals&r, throw &7nether quartz&r, &credstone dust&r and a &3charged certus crystal&r into water."
			]
			id: "4A719341AA53B1CC"
			rewards: [
				{
					id: "722B0958DEF618DB"
					type: "xp"
					xp: 20
				}
				{
					id: "48A6C01C1662441C"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
			]
			size: 1.25d
			subtitle: "Automate this"
			tasks: [
				{
					id: "453BC1F39D29DF4A"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:fluix_crystal"
					}
					type: "item"
				}
				{
					id: "151BA04FD699690B"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:fluix_dust"
					}
					type: "item"
				}
			]
			title: "Fluix"
			x: 0.0d
			y: 5.0d
		}
		{
			dependencies: ["4F9B5850D630B7C2"]
			description: ["As your network grows, the power demands will inevitably grow with it. You'll notice that the network itself only holds a small amount of energy, adding a controller increases this. However, your network will almost certainly reach a point of demanding more power than it is capable of buffering at any given time. This is where we introduce the energy cell, allowing your network to buffer more power and avoid periodic network drops due to spikes in consumption."]
			id: "527D99B5715B3DAE"
			subtitle: "Network power buffer"
			tasks: [{
				id: "34875CBC59EB2CEE"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:energy_cell"
					tag: { }
				}
				type: "item"
			}]
			x: -4.5d
			y: 4.5d
		}
		{
			dependencies: [
				"7EF66B49E69B57E0"
				"757A217506F440A2"
				"22891E06BE664695"
				"7F7D5A012187CF4F"
				"7A4FF3976EB91CEB"
				"1F8E11D7CAFA5B63"
			]
			description: ["Along with &dfluix crystals&r, &6processors&r are going to be used in &clarge quatities&r, you are going to want to automate the production process. Just as how fluix crystals are required for most things cable related, processors of one kind or another are going to be required for almost &eevery network component you will build&r."]
			id: "7A33AF5CD7476775"
			rewards: [
				{
					id: "3BB5C3846D3C749D"
					type: "xp"
					xp: 30
				}
				{
					id: "5DC92FC7418D53D5"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
			]
			size: 2.0d
			subtitle: "This too!"
			tasks: [
				{
					id: "046243721B98B5CB"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:logic_processor"
					}
					type: "item"
				}
				{
					id: "41386F9DA2716409"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:calculation_processor"
					}
					type: "item"
				}
				{
					id: "302C79C82CDD3B6E"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:engineering_processor"
					}
					type: "item"
				}
			]
			title: "Processing processors"
			x: 0.0d
			y: 6.5d
		}
		{
			dependencies: [
				"4A719341AA53B1CC"
				"3D36143AECED6DDC"
			]
			description: [
				"Fluix ME glass cables are the simplest cables to make, transfers power and up to 16 channels. It comes in 17 different colors, the default being Fluix, and can be dyed any color using any of the 16 dyes."
				""
				"You can also paint cables with any forge compatible paint brush in world."
			]
			hide_dependency_lines: true
			id: "69AF46B1490B34C4"
			subtitle: "Your basic ME cable"
			tasks: [{
				id: "2459921D2A07DD2D"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluix_glass_cable"
				}
				type: "item"
			}]
			x: 2.5d
			y: 4.5d
		}
		{
			dependencies: [
				"7A4FF3976EB91CEB"
				"55B45DFB8B74400C"
			]
			dependency_requirement: "one_completed"
			description: ["&3Quartz fiber&r is used to share power between networks, while keeping them separate. This allows you to power subnetworks without needing to put energy acceptors and power cables everywhere. It can also be used to keep cables from connecting, although using cables of differing colors, or using a&8 Cable Anchor&r is cheaper and more effective."]
			hide_dependency_lines: true
			id: "3D36143AECED6DDC"
			subtitle: "Cable sub-parts"
			tasks: [{
				id: "7ED9060C638AFD57"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:quartz_fiber"
				}
				type: "item"
			}]
			x: 2.5d
			y: 3.5d
		}
		{
			dependencies: ["23B66F4C381C1019"]
			description: ["While bearing some similarity to Fluix ME Covered Cable in appearance, they provide diagnostic functions and troubleshooting help by allowing you actually see the channel usage on the cables, the channels appear as lit colored lines that run along the black stripe on the cables giving you an understanding of how your channels are currently being routed through your network. For regular smart cables, the first four channels show as lines matching the color of the cable, the next four show as white lines, etc."]
			id: "72F3A7D842D84C6A"
			subtitle: "Cable, but smarter"
			tasks: [{
				id: "06006BFDD1FD37A4"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluix_smart_cable"
				}
				type: "item"
			}]
			x: 4.0d
			y: 3.0d
		}
		{
			dependencies: ["69AF46B1490B34C4"]
			description: ["Covered cables offer no &oreal&r benefits over the Fluix ME Glass Cable. It can be used as an alternate aesthetic choice if you prefer the covered/colored look."]
			id: "23B66F4C381C1019"
			subtitle: "x16 Channels"
			tasks: [{
				id: "12A1A742AD56BCA2"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluix_covered_cable"
				}
				type: "item"
			}]
			x: 4.0d
			y: 4.5d
		}
		{
			dependencies: ["23B66F4C381C1019"]
			description: [
				"Higher Capacity cable, can carry 64 channels unlike standard cable which can only carry 8, however it doesn't support buses so you must first step down from dense to a smaller cable (such as Fluix ME Glass Cable or Fluix ME Smart Cable) before using buses or panels."
				""
				"Dense cables slightly override the \"shortest path\" behavior of channels, channels will always prioritize the shortest path to a dense cable, and then the shortest path through that dense cable to a controller."
			]
			id: "215FAC2FA6D64DD5"
			subtitle: "x64 Channels"
			tasks: [{
				id: "6FAC1629A682E0C9"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluix_covered_dense_cable"
				}
				type: "item"
			}]
			x: 5.5d
			y: 4.5d
		}
		{
			dependencies: ["72F3A7D842D84C6A"]
			description: ["ME dense smart cable provides all the functionalities ove previous tiers of cables. Except lines representing channels on these cables represent multiple channels each."]
			id: "54BCA40AC19FF61D"
			subtitle: "Smart cable, but thicker "
			tasks: [{
				id: "22E7FA8617233627"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluix_smart_dense_cable"
				}
				type: "item"
			}]
			x: 5.5d
			y: 3.0d
		}
		{
			dependencies: [
				"7A33AF5CD7476775"
				"4A719341AA53B1CC"
			]
			description: [
				"The controller is the heart of the ME Network. Without it, a network is refered to as \"ad-hoc\" and can only have a max of 16 channel-using devices total."
				""
				"It is not possible to have 2 controllers in one ME Network."
				""
				"The controller provides 32 Channels per face."
				""
				"The controller requires 6 AE/t per controller block to function. Each controller block can store &68000 AE&r, so larger networks might require additional energy storage."
				""
				"Multiblock Controllers can be built in a fairly free form but there &o&nare&r&r some general rules to follow: "
				""
				"{@pagebreak}"
				"To make this easier, you can tell when your multiblock controller is valid or not by the color of the controller blocks. &cRed ME controller&r multi-blocks are not valid and you will know when you have correctly placed the structure when it begeins to cycle in color when powered."
				""
				"All controller blocks on a ME Network must be connected otherwise they will turn red."
				"The maximum size a controller multi block can be is 7x7x7, otherwise it will turn red."
				"A controller can have 2 adjacent blocks in at most 1 axis; if a block violates this rule, it will disable and turn red."
			]
			id: "38A8DAD3A173256D"
			rewards: [
				{
					id: "5C8E1AB146905033"
					type: "xp"
					xp: 30
				}
				{
					id: "03171FF269E0BDF6"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
				{
					count: 2
					id: "32D8F36359CD967C"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			size: 1.5d
			subtitle: "The heart of every major network"
			tasks: [{
				id: "2FD7962D05501530"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:controller"
				}
				type: "item"
			}]
			x: -3.0d
			y: 7.5d
		}
		{
			dependencies: [
				"65EAA584EE12D3D9"
				"7E2C5C3483A9E51A"
			]
			description: [
				"First craft an \"Illuminated Panel\", then use it to obtain your first ME terminal. Terminals are the primary method by which you interact with an AE2 network and for an AE2 network to interact with you. There are several variants with differing functions. They are considered cable sub-parts and will inherit the color of the cable they are attached to."
				""
				"Your basic terminal, allows you to do little more than view and access the contents of your network's storage and request things from your autocrafting setup though. to do more, you will need to upgrade it."
			]
			id: "6012663645C252FB"
			rewards: [
				{
					id: "2C4343DD5C992D80"
					type: "xp"
					xp: 20
				}
				{
					count: 7
					id: "015563D84C441652"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Viewing your network"
			tasks: [{
				id: "6473ECD3D2CA99B7"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:terminal"
				}
				type: "item"
			}]
			x: 0.0d
			y: 8.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			id: "65EAA584EE12D3D9"
			rewards: [
				{
					id: "4CA04E6F330EE6A9"
					type: "xp"
					xp: 15
				}
				{
					count: 5
					id: "5DC2AD7AF2ECECE4"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			tasks: [{
				id: "7E4733C98B56F812"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:annihilation_core"
				}
				type: "item"
			}]
			x: 1.5d
			y: 8.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			id: "7E2C5C3483A9E51A"
			rewards: [
				{
					id: "57C2841E98441526"
					type: "xp"
					xp: 15
				}
				{
					count: 5
					id: "3F9F1ABCD9100773"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			tasks: [{
				id: "6D2979BCEFCF9189"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:formation_core"
				}
				type: "item"
			}]
			x: -1.5d
			y: 8.5d
		}
		{
			dependencies: ["527D99B5715B3DAE"]
			id: "1446C0690EC5B754"
			subtitle: "Energy cell 2.0"
			tasks: [{
				id: "23DB67BF6E66698A"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:dense_energy_cell"
					tag: { }
				}
				type: "item"
			}]
			x: -6.0d
			y: 4.5d
		}
		{
			dependencies: [
				"6012663645C252FB"
				"05607C56B0320CD7"
			]
			description: ["Using either an ME Chest or an ME drive, cells can be inserted and their contents interacted with manually. Terminals will make this much easier, providing a dedicated access point for storage mediums."]
			id: "0348661A4898AAAD"
			rewards: [
				{
					id: "67912ABF32F09D0D"
					type: "xp"
					xp: 20
				}
				{
					id: "74D3DF8C994C9A14"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:bevel"
					}
					type: "item"
				}
			]
			subtitle: "Cells go here"
			tasks: [
				{
					id: "161926C34343F80C"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:chest"
					}
					type: "item"
				}
				{
					id: "532301CC0FD8D4AB"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "ae2:drive"
					}
					type: "item"
				}
			]
			title: "ME Chests and Drives"
			x: 0.0d
			y: 9.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			description: [
				"Using a cell workbench, cells can be filtered to only accept certain items, similar to how ME Storage Busses can be filtered."
				""
				"Items can be dragged into the slots from &aJEI&r even, if you don't actually have any of that item."
			]
			id: "03308BA3DDCC5932"
			rewards: [
				{
					id: "1EE52EDD56827276"
					type: "xp"
					xp: 15
				}
				{
					count: 4
					id: "63DFDB3F92DCFCC7"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "filtering and partitioning storage cells"
			tasks: [{
				id: "06A667224E238BCF"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_workbench"
				}
				type: "item"
			}]
			x: -2.5d
			y: 9.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			id: "1CCF84C68FCC71B6"
			tasks: [{
				id: "571A9C64CC5D24DA"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:basic_card"
				}
				type: "item"
			}]
			x: 3.0d
			y: 7.5d
		}
		{
			dependencies: ["1CCF84C68FCC71B6"]
			id: "4C8D4A3A21BFB4EB"
			tasks: [{
				id: "25A4750990E428B4"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:redstone_card"
				}
				type: "item"
			}]
			x: 4.5d
			y: 6.5d
		}
		{
			dependencies: ["1CCF84C68FCC71B6"]
			id: "45CFEAD5C63639D5"
			tasks: [{
				id: "2DD2811EC2A0A104"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:void_card"
				}
				type: "item"
			}]
			x: 4.5d
			y: 8.5d
		}
		{
			dependencies: ["1CCF84C68FCC71B6"]
			id: "46FE8D96751CBBE6"
			tasks: [{
				id: "4E910088FE776DA8"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:crafting_card"
				}
				type: "item"
			}]
			x: 5.5d
			y: 6.5d
		}
		{
			dependencies: ["1CCF84C68FCC71B6"]
			id: "5B9ED16A573F5409"
			tasks: [{
				id: "74AA7623D6B8489C"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:capacity_card"
				}
				type: "item"
			}]
			x: 5.5d
			y: 8.5d
		}
		{
			dependencies: ["1CCF84C68FCC71B6"]
			id: "5D58607AE6F39E34"
			tasks: [{
				id: "3EAEE6303B76FA8E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:advanced_card"
				}
				type: "item"
			}]
			x: 5.5d
			y: 7.5d
		}
		{
			dependencies: ["5D58607AE6F39E34"]
			id: "776835B618035847"
			tasks: [{
				id: "66CE7393F0839129"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fuzzy_card"
				}
				type: "item"
			}]
			x: 6.5d
			y: 6.5d
		}
		{
			dependencies: ["5D58607AE6F39E34"]
			id: "58666599CFB277C2"
			tasks: [{
				id: "5D4B2A59617F3C16"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:inverter_card"
				}
				type: "item"
			}]
			x: 6.5d
			y: 8.5d
		}
		{
			dependencies: ["5D58607AE6F39E34"]
			id: "200C91AA7F8AA55F"
			tasks: [{
				id: "628418D2E9DFED85"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:energy_card"
				}
				type: "item"
			}]
			x: 7.5d
			y: 8.5d
		}
		{
			dependencies: ["5D58607AE6F39E34"]
			id: "5ACAFFA907824F1E"
			tasks: [{
				id: "3337A8A07391B958"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:equal_distribution_card"
				}
				type: "item"
			}]
			x: 7.5d
			y: 6.5d
		}
		{
			dependencies: ["5D58607AE6F39E34"]
			id: "2F413BEACBF5135B"
			tasks: [{
				id: "35C44756914E4357"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:speed_card"
				}
				type: "item"
			}]
			x: 7.0d
			y: 7.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			hide_dependency_lines: true
			id: "544DA5259949B3C7"
			tasks: [{
				id: "061FBA27F2C598DE"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_component_1k"
				}
				type: "item"
			}]
			x: 0.0d
			y: 11.5d
		}
		{
			dependencies: ["544DA5259949B3C7"]
			id: "20810DF768F285DF"
			tasks: [{
				id: "669C78E8AE81483B"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_component_4k"
				}
				type: "item"
			}]
			x: 0.0d
			y: 13.0d
		}
		{
			dependencies: ["20810DF768F285DF"]
			id: "249AE9211DE6DCCB"
			tasks: [{
				id: "679DAE945E91AE07"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_component_16k"
				}
				type: "item"
			}]
			x: 0.0d
			y: 14.0d
		}
		{
			dependencies: ["249AE9211DE6DCCB"]
			id: "2A0134E9C3AA3473"
			tasks: [{
				id: "7E13FAAA53C86DD3"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_component_64k"
				}
				type: "item"
			}]
			x: 0.0d
			y: 15.0d
		}
		{
			dependencies: ["2A0134E9C3AA3473"]
			id: "10E94F3EEB4BD905"
			tasks: [{
				id: "1D2AFC0D43C160A6"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cell_component_256k"
				}
				type: "item"
			}]
			x: 0.0d
			y: 16.0d
		}
		{
			dependencies: [
				"10E94F3EEB4BD905"
				"576308F3B27FC0DC"
			]
			id: "25081612033803DC"
			tasks: [{
				id: "1EF7013A24B25683"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:cell_component_1m"
				}
				type: "item"
			}]
			x: 0.0d
			y: 18.5d
		}
		{
			dependencies: ["25081612033803DC"]
			id: "28CC089AF7A0CB59"
			tasks: [{
				id: "7F4ABDFE5BE8E30E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:cell_component_4m"
				}
				type: "item"
			}]
			x: 0.0d
			y: 19.5d
		}
		{
			dependencies: ["28CC089AF7A0CB59"]
			id: "5F8047EB6FA4AA24"
			tasks: [{
				id: "370E1A5E66E5F03A"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:cell_component_16m"
				}
				type: "item"
			}]
			x: 0.0d
			y: 20.5d
		}
		{
			dependencies: ["5F8047EB6FA4AA24"]
			id: "71637054BBF9B99B"
			tasks: [{
				id: "6E778B9BF3E21CAC"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:cell_component_64m"
				}
				type: "item"
			}]
			x: 0.0d
			y: 21.5d
		}
		{
			dependencies: ["71637054BBF9B99B"]
			id: "2D331886B1E79797"
			tasks: [{
				id: "07067B5463A75A7E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:cell_component_256m"
				}
				type: "item"
			}]
			x: 0.0d
			y: 22.5d
		}
		{
			dependencies: [
				"544DA5259949B3C7"
				"7D2462E72B5DCF40"
			]
			id: "05E3948832A40209"
			tasks: [{
				id: "69AB682637CC1AEB"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:item_storage_cell_1k"
					tag: { }
				}
				type: "item"
			}]
			x: 2.0d
			y: 12.0d
		}
		{
			dependencies: ["10E94F3EEB4BD905"]
			id: "576308F3B27FC0DC"
			subtitle: "In-world transformation"
			tasks: [{
				id: "7F9143316D29614D"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:sky_steel_ingot"
				}
				type: "item"
			}]
			x: -0.007142857142859782d
			y: 17.25714285714284d
		}
		{
			dependencies: [
				"63F3D98D3B56C193"
				"544DA5259949B3C7"
			]
			description: ["Crafting storages are available in all cell sizes (1k, 4k, etc.). They store the ingredients and intermediate ingredients involved in a craft, so larger or more storages are required for the CPU to handle crafting jobs with more ingredients. Intermediate ingredients are the things made \"in -between\" the starting recipe ingredients and final product of a complex string of recipes. "]
			id: "7AB6131A2890E8E4"
			subtitle: "Not Optional"
			tasks: [{
				id: "576E903CA741CBF5"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:1k_crafting_storage"
				}
				type: "item"
			}]
			x: -2.0d
			y: 12.0d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: ["Crafting units simply fill space in a CPU in order to make it a solid rectangular prism, Which &oIS&r a requirement for the multi block to form, if you don't have enough of the other components. They are also a base ingredient in the other components."]
			id: "122EE295102E98A8"
			subtitle: "Optional"
			tasks: [{
				id: "1FC434451BE6A44B"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:crafting_unit"
				}
				type: "item"
			}]
			x: -5.5d
			y: 10.0d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: ["Optional but you want these. Crafting co-processors make the system send out ingredient batches from pattern providers more frequently. This allows them to keep up with machines that process quickly. An example of this is a pattern provider surrounded by molecular assemblers being able to push ingredients faster than a single assembler can process, and thus distributing the ingredient batches between the surrounding assemblers rather than only supplying ingredients quickly enough to feed the single assembler, as it otherwise would have."]
			id: "506D3D14BC08BEDF"
			subtitle: "Optional, kinda"
			tasks: [{
				id: "5D4CF84974CCE547"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:crafting_accelerator"
				}
				type: "item"
			}]
			x: -3.0d
			y: 12.0d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: [
				"Pattern providers are the primary way in which your autocrafting system interacts with the world. They push the ingredients in their patterns to adjacent inventories, and items can be inserted into them in order to insert them into the network. Often a channel can be saved by piping the output of a machine back into a nearby pattern provider (This usually needs to be the one that pushed the ingredients) instead of using an ME Import Bus to pull the output of the machine into the network."
				""
				"Note: Since they push the ingredients directly from the crafting storage in a crafting CPU, they never actually contain the ingredients in their inventory, so you cannot pipe out directly from them. You have to have the provider push to another inventory (like a chest) then pipe your items/ingredients from that."
				""
				"{@pagebreak}"
				"Another thing to note is the fact the provider has to push ALL of the ingredients at once, it cannot push in half-batches. This is useful to know as you can exploit this to your advantage."
				""
				"Pattern providers have a special interaction with interfaces on subnets: if the interface is unmodified (nothing in the request slots) the provider will skip the interface entirely and push directly to that subnet's storage, skipping the interface and not filling it with recipe batches, and more importantly, not inserting the next batch until there's space in the machine. This works correctly with blocking mode, the provider will monitor the slots in the machine for ingredients, instead of the slots in the interface. This will push both the thing to be smelted and the fuel directly into the corresponding slots in the furnace. You can use this to pattern provide into multiple sides of a machine, or multiple machines, as an example."
			]
			id: "6D9CCDB12FF5B518"
			subtitle: "Not Optional"
			tasks: [{
				id: "6801DB4616B73355"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:pattern_provider"
				}
				type: "item"
			}]
			x: -6.0d
			y: 12.0d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: [
				"The molecular assembler takes input items and carries out the operation defined by an adjacent pattern provider, or the inserted crafting pattern, smithing table pattern, or stonecutting pattern, then pushes the product to adjacent inventories."
				""
				"Their main use is in conjunction with pattern providers. Pattern providers have special behavior in this case, and will send information about the relevant pattern along with the ingredients to adjacent assemblers. Since assemblers auto-eject the results of crafts to adjacent inventories (and thus into the return slots of the pattern provider), an assembler on a pattern provider is all that is needed to automate crafting patterns."
			]
			id: "4E9DB7997DD4EDF7"
			subtitle: "Not Optional"
			tasks: [{
				id: "649A35FD7F7BE250"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:molecular_assembler"
				}
				type: "item"
			}]
			x: -5.0d
			y: 12.0d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: [
				"Use blank patterns in a ME pattern encoding terminal to make a variety of different patterns for crafting, smithing, etc and inserted in ME pattern providers or molecular assemblers."
				""
				"These are where and how you store your recipes for autocrafting and the like."
			]
			id: "3E0EF49EEAB907C3"
			tasks: [{
				id: "06B19857DAD0621A"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:blank_pattern"
				}
				type: "item"
			}]
			x: -5.5d
			y: 9.0d
		}
		{
			dependencies: ["65EAA584EE12D3D9"]
			description: [
				"The import bus pulls items and fluids (and whatever else) from the inventory it's touching and pushes them into network storage."
				""
				"In the interest of lag reduction, if the import bus has not imported something recently, it goes into a kind of \"eco mode\" where it ticks slowly, and \"wakes up\" and accelerates to full speed (4 operations per second) when it successfully senses that it can import something again."
				""
				"{@pagebreak}"
				"By default the bus will import anything it has access to. Items inserted into its filter slots will act as a whitelist, only allowing those specific items to be imported."
				""
				"Items and fluids can be dragged into the slots from &aJEI&r even if you don't actually have any of that item."
				""
				"Right-click with a fluid container (like a bucket or fluid tank) to set that fluid as a filter instead of the bucket or tank item."
			]
			hide_dependency_lines: true
			id: "54B6C8FA074658E3"
			subtitle: "Subpart - Pulls things INTO your network."
			tasks: [{
				id: "0F8C1644F5934B79"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:import_bus"
				}
				type: "item"
			}]
			x: 7.5d
			y: 4.5d
		}
		{
			dependencies: ["7E2C5C3483A9E51A"]
			description: [
				"The export bus pulls items and fluids (and whatever else) from network storage and pushes them into the inventory it's touching."
				""
				"in the interest of lag reduction, if the export bus has not exported something recently, it goes into a kind of \"eco mode\" where it ticks slowly, and \"wakes up\" and accelerates to full speed (4 operations per second) when it successfully senses that it can export something again."
				""
				"{@pagebreak}"
				"By default the bus will not export anything automatically. Items inserted into its filter slots will act as a whitelist, allowing those specific items to be exported."
				""
				"Items and fluids can be dragged into the slots from &aJEI&r even if you don't actually have any of that item."
				""
				"Right-click with a fluid container (like a bucket, fluid tank, etc) to set that fluid as a filter instead of the bucket or tank item."
			]
			hide_dependency_lines: true
			id: "482DA8042A4B1801"
			subtitle: "Subpart - Sends things FROM your network"
			tasks: [{
				id: "6B5B21FE116DE88C"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:export_bus"
				}
				type: "item"
			}]
			x: 7.5d
			y: 3.0d
		}
		{
			dependencies: ["54B6C8FA074658E3"]
			id: "7EE526D3A8DFC285"
			tasks: [{
				id: "42DE3D12903E7065"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "expatternprovider:ex_import_bus_part"
				}
				type: "item"
			}]
			x: 8.5d
			y: 5.0d
		}
		{
			dependencies: ["482DA8042A4B1801"]
			id: "32C471BCDB7EA1A4"
			tasks: [{
				id: "340CE08768600288"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "expatternprovider:ex_export_bus_part"
				}
				type: "item"
			}]
			x: 8.5d
			y: 2.5d
		}
		{
			dependencies: [
				"482DA8042A4B1801"
				"54B6C8FA074658E3"
			]
			description: [
				"The level emitter emits a redstone signal depending on the quantity of an item in network storage."
				""
				"There is also a version that emits a redstone signal depending on the energy stored in your network."
				""
				"Items and fluids can be dragged into the slot from &aJEI&r even if you don't actually have any of that item."
				""
				"Right-click with a fluid container (like a bucket or fluid tank) to set that fluid as a filter instead of the bucket or tank item."
				""
				"They are cable subparts."
			]
			id: "616671B7D9F1058F"
			subtitle: "Doesn't use a channel"
			tasks: [{
				id: "79CCD82E03E71596"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:level_emitter"
				}
				type: "item"
			}]
			x: 8.464285714285715d
			y: 3.750000000000007d
		}
		{
			dependencies: [
				"7E2C5C3483A9E51A"
				"65EAA584EE12D3D9"
			]
			description: [
				"Crafting CPUs manage crafting requests. They store the intermediate ingredients while crafting jobs with multiple steps are being carried out, and affect how big jobs can be, and to some extent how fast they are completed."
				""
				"Each crafting CPU handles 1 request or job, so if you want to request both a calculation processor and 256 smooth stone at once, you need 2 CPU multiblocks."
				""
				"{@pagebreak}"
				"They can be set to handle requests from players, automation (export busses and interfaces), or both."
				""
				"R-click one to bring up its crafting status UI where you can check the progress on the crafting job the CPU is handling at any given moment.."
			]
			hide_dependency_lines: true
			id: "63F3D98D3B56C193"
			size: 1.5d
			subtitle: " The brain of every major network "
			tasks: [{
				id: "1834585D85680CD2"
				title: "Auto-Crafting basics"
				type: "checkmark"
			}]
			title: "Crafting CPUs and Auto-crafting Basics"
			x: -4.0d
			y: 9.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			description: [
				"Storage Cells are one of the primary methods of storage in Applied Energistics. They go in ME Drives or ME Chests."
				""
				"In short, bytes are the over call count of items inside, were as types are the types of an item inside. items with an NBT value will count as 2 separate item types even if they are effectively the same item."
				""
				"Meaning as an example: "
				""
				"3 iron swords will use 3 bytes AND 3 type slot."
				"3 iron ingots will use 3 bytes and 1 type slot."
				""
				"However, once the capacity of the cell has been reached, if the cell containing the iron ingots has an empty type slot and has not been partitioned to exclude it, the iron ingots will now begin filling up and taking a second type slot. "
				"The cell would now appear with 2 type slots in use for iron, once the first slot is full, if not restricted, iron can fill the entirety of the cell if that is desired. Or if not this is why you want to partition cells, use overflow destruction cards to stop one cell from overflowing into another, etc."
				""
				"This is a big part of why it is always recommended to keep tools, armor etc... anything nbt related out of your storage cells."
				""
				"Storage components can be removed from the housing if the cell is empty by shift-right clicking with the cell in your hand."
			]
			hide_dependency_lines: true
			id: "7D2462E72B5DCF40"
			subtitle: "The hoarding begins"
			tasks: [{
				id: "7B41143765692B37"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:item_cell_housing"
				}
				type: "item"
			}]
			x: 0.0d
			y: 10.5d
		}
		{
			dependencies: ["63F3D98D3B56C193"]
			description: ["The crafting monitor displays the job the CPU is handling at the moment. The screen can be colored with a Color Applicator."]
			id: "7509CF6EA1077A41"
			subtitle: "Optional"
			tasks: [{
				id: "67E2AA741C3DFED5"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:crafting_monitor"
				}
				type: "item"
			}]
			x: -4.0d
			y: 11.0d
		}
		{
			dependencies: [
				"6D9CCDB12FF5B518"
				"4E9DB7997DD4EDF7"
				"7AB6131A2890E8E4"
				"506D3D14BC08BEDF"
			]
			description: [
				"Start with basic autocrafting with some normal things like crafting recipes, and the like. Once you have successfully automated some crafting patterns start experimenting with other forms of patterns. You can automate furnaces, smithing, just about any farm all with clever pattern control."
				""
				"It can also be a good idea not to queue an excessive amount of recipes at once, if the system is not keeping up to your liking you should probably look into upgrading crafting CPUs, co-processors and the like."
				""
				"{@pagebreak}"
				"Processing Patterns are where a lot of flexibility in autocrafting comes from. They are the most generalized type, simply saying \"if a pattern provider pushes these ingredients to adjacent inventories, the ME system will recieve these items at some point in the near or distant future\". They are how you will autocraft with almost any modded machine, or furnaces and the like. Because they are so general in use and do not care what happens between pushing ingredients and receiving the result, you can do some really wierd stuff, like inputting the ingredients into an entire complex assembly line chain which will sort out the mess, take in other ingredients from infinitely-producing farms, the ME system does not care as long as it gets the product result the pattern specified."
				""
				"In fact, it doesn't even care if the ingredients make any sense in relation to the result. You could tell it \"1 oak fence = 1 echo shard\" and have your warden farm kill a warden upon an oak fence input trigger... and yes, it will still work."
			]
			id: "52EE3999CFEDA9B4"
			subtitle: "Baby steps"
			tasks: [{
				id: "447863D3BAABE95F"
				title: "Some Pointers"
				type: "checkmark"
			}]
			x: -4.0d
			y: 13.5d
		}
		{
			dependencies: ["7A33AF5CD7476775"]
			description: ["The IO Port allows you to rapidly fill or empty storage cells to or from network storage."]
			hide_dependency_lines: false
			id: "05607C56B0320CD7"
			rewards: [
				{
					id: "0469469F6098873A"
					type: "xp"
					xp: 15
				}
				{
					count: 4
					id: "25393EAA3DAE75CD"
					item: {
						Count: 1
						ForgeCaps: {
							"celestisynth:celestisynthitemstackcapabilities": {
								cs.aquaSkin: 0
							}
						}
						id: "numismatics:spur"
					}
					type: "item"
				}
			]
			subtitle: "Input/Output"
			tasks: [{
				id: "7EFC2800229FE102"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:io_port"
				}
				type: "item"
			}]
			x: 2.5d
			y: 9.5d
		}
		{
			dependencies: ["05607C56B0320CD7"]
			id: "50661F8E42D7DCA0"
			tasks: [{
				id: "3B8788E6DF7BABD8"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_io_port"
				}
				type: "item"
			}]
			x: 3.5d
			y: 10.5d
		}
		{
			dependencies: ["05607C56B0320CD7"]
			id: "641A790B8CDAD4A5"
			tasks: [{
				id: "350B2FAD8FDF1FC0"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "expatternprovider:ex_io_port"
				}
				type: "item"
			}]
			x: 2.5d
			y: 10.5d
		}
		{
			dependencies: ["05607C56B0320CD7"]
			id: "3A6584785944AF27"
			tasks: [{
				id: "74E83F6228E128F2"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:me_p2p_tunnel"
				}
				type: "item"
			}]
			x: 3.5d
			y: 9.5d
		}
		{
			dependencies: ["3A6584785944AF27"]
			hide_dependency_lines: true
			id: "089EC148C8AAF1EC"
			tasks: [{
				id: "051D1634320921BD"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:memory_card"
					tag: { }
				}
				type: "item"
			}]
			x: 6.0d
			y: 10.5d
		}
		{
			dependencies: [
				"32C471BCDB7EA1A4"
				"7EE526D3A8DFC285"
			]
			description: [""]
			id: "64011532D6F5F6B6"
			subtitle: "Do not use excessively."
			tasks: [{
				id: "69D0C6627AA9F61D"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:storage_bus"
				}
				type: "item"
			}]
			x: 9.678571428571423d
			y: 3.75d
		}
		{
			dependencies: ["50661F8E42D7DCA0"]
			id: "7C545842235F9DFF"
			tasks: [{
				id: "0A943008791FD745"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_pylon"
				}
				type: "item"
			}]
			x: 4.5d
			y: 10.5d
		}
		{
			dependencies: ["50661F8E42D7DCA0"]
			id: "5C7D9826EB556806"
			tasks: [{
				id: "4F78F9A1A4DAE20F"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_anchor"
				}
				type: "item"
			}]
			x: 3.5d
			y: 11.5d
		}
		{
			dependencies: ["50661F8E42D7DCA0"]
			id: "082856DCE7FE2C38"
			tasks: [{
				id: "47799A08BADBFA68"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_storage_cell_2"
				}
				type: "item"
			}]
			x: 4.5d
			y: 11.5d
		}
		{
			dependencies: ["082856DCE7FE2C38"]
			id: "027C93AD7E5D0D23"
			tasks: [{
				id: "1516BA57FC335768"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_storage_cell_16"
				}
				type: "item"
			}]
			x: 5.5d
			y: 12.5d
		}
		{
			dependencies: ["027C93AD7E5D0D23"]
			id: "3D7FD67B166B0E04"
			tasks: [{
				id: "7ED0FE6DBB7EEF5E"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:spatial_storage_cell_128"
				}
				type: "item"
			}]
			x: 6.5d
			y: 13.5d
		}
		{
			dependencies: ["7D2462E72B5DCF40"]
			hide_dependency_lines: true
			id: "0F4282501ED109B5"
			tasks: [{
				id: "64084117D930F598"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:fluid_cell_housing"
				}
				type: "item"
			}]
			x: 2.0d
			y: 13.0d
		}
		{
			dependencies: ["7D2462E72B5DCF40"]
			hide_dependency_lines: true
			id: "62CF6DAE6B93FF66"
			tasks: [{
				id: "734C0C4BCB8E3525"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "appmek:chemical_cell_housing"
				}
				type: "item"
			}]
			x: 2.0d
			y: 14.0d
		}
		{
			dependencies: ["7D2462E72B5DCF40"]
			hide_dependency_lines: true
			id: "2A2768B6AE845E30"
			tasks: [{
				id: "1CC64289D642D365"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "appflux:fe_cell_housing"
				}
				type: "item"
			}]
			x: 4.0d
			y: 14.5d
		}
		{
			dependencies: ["7D2462E72B5DCF40"]
			hide_dependency_lines: true
			id: "321976A0AA6C4C59"
			tasks: [{
				id: "2042A09CF8390052"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "appbot:mana_cell_housing"
				}
				type: "item"
			}]
			x: 2.0d
			y: 15.0d
		}
		{
			dependencies: ["7D2462E72B5DCF40"]
			hide_dependency_lines: true
			id: "2A53722702570F4E"
			tasks: [{
				id: "719F3961336ECDA5"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "arseng:source_cell_housing"
				}
				type: "item"
			}]
			x: 2.0d
			y: 16.0d
		}
		{
			dependencies: ["576308F3B27FC0DC"]
			id: "0DA8CD1F89C5DC34"
			tasks: [{
				id: "56E2978DB3786AD7"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:mega_item_cell_housing"
				}
				type: "item"
			}]
			x: 0.9642857142857153d
			y: 17.25d
		}
		{
			dependencies: ["0F4282501ED109B5"]
			id: "174615075009CBC9"
			tasks: [{
				id: "2EADEDB321E219C5"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:mega_fluid_cell_housing"
				}
				type: "item"
			}]
			x: 3.0d
			y: 13.0d
		}
		{
			dependencies: ["62CF6DAE6B93FF66"]
			id: "56093D2875CA3AE1"
			tasks: [{
				id: "345E4045C2E80BEC"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:mega_chemical_cell_housing"
				}
				type: "item"
			}]
			x: 3.0d
			y: 14.0d
		}
		{
			dependencies: ["321976A0AA6C4C59"]
			id: "7485E129D56A12B6"
			tasks: [{
				id: "6554DF94C4D14BCB"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:mega_mana_cell_housing"
				}
				type: "item"
			}]
			x: 3.0d
			y: 15.0d
		}
		{
			dependencies: ["2A53722702570F4E"]
			id: "24617E8E689F7DA6"
			tasks: [{
				id: "26C8D7E24FD8CCDF"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "megacells:mega_source_cell_housing"
				}
				type: "item"
			}]
			x: 3.0d
			y: 16.0d
		}
		{
			dependencies: ["38A8DAD3A173256D"]
			description: [
				"Allows wireless access via a Wireless Terminal. Range and power usage is determined based on the number of Wireless Booster installed."
				""
				"A network can have any number of wireless access points with any number of Wireless Booster in each one, allowing you to optimize power usage and range by altering your setup. Requires a channel to function and is used to bind wireless terminals to the network as well."
			]
			id: "6E3C73A89BE9CB85"
			subtitle: "Going wireless"
			tasks: [{
				id: "2110466A388E6449"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:wireless_access_point"
				}
				type: "item"
			}]
			x: -5.0d
			y: 6.5d
		}
		{
			dependencies: ["6E3C73A89BE9CB85"]
			description: ["Wireless terminals are portable versions of the regular wired terminals. They have the exact same GUIs as their wired counterparts, except instead of slots for view cells, they have slots for upgrade cards."]
			id: "3C14DEF222D49021"
			subtitle: "Curios and hotkey compatible!"
			tasks: [{
				id: "4AE4D7B9AA4122E5"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:wireless_terminal"
				}
				type: "item"
			}]
			x: -6.5d
			y: 6.0d
		}
		{
			dependencies: ["6E3C73A89BE9CB85"]
			description: ["Used to increase the range of the wireless access point."]
			id: "475840187805136F"
			subtitle: "More range, please"
			tasks: [{
				id: "2802F71998B6B81C"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:wireless_booster"
				}
				type: "item"
			}]
			x: -6.5d
			y: 7.0d
		}
		{
			dependencies: ["4F9B5850D630B7C2"]
			description: [
				"The matter condenser intakes just about any form of \"matter\" and well... condenses it, silly... Also accepts water!"
				""
				"&dCondensed matter&r, lots of it, is required for things such as &9singularities&r, which are in turn required for quantum mechanics."
			]
			id: "28064FA66EE0953B"
			subtitle: "Great for trash cans!"
			tasks: [{
				id: "47635C0A51585467"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:condenser"
				}
				type: "item"
			}]
			x: -4.5d
			y: 3.0d
		}
		{
			dependencies: ["28064FA66EE0953B"]
			description: ["Made with 256k items or buckets in a Matter Condenser in singularity mode."]
			id: "5FA7113B0E256602"
			subtitle: "super dense ball of matter "
			tasks: [{
				id: "699C9631B0B46FA7"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:singularity"
				}
				type: "item"
			}]
			x: -6.5d
			y: 3.0d
		}
		{
			dependencies: ["5FA7113B0E256602"]
			description: ["Crafted by causing a reaction between Ender Dust and a Singularity. Any explosive force should work to trigger the reaction, tiny tnt has a radius the provides minimal risk of accidental damage and is sufficient to create the reaction. They can be labeled with things like an anvil to help keep track of which to are linked (entangled) to which."]
			id: "1C761E69DB39289E"
			subtitle: "1 singularity will make 2 Q.E singularities"
			tasks: [{
				id: "6497C8514F4882FF"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:quantum_entangled_singularity"
				}
				type: "item"
			}]
			x: -8.0d
			y: 3.0d
		}
		{
			dependencies: [
				"1C761E69DB39289E"
				"6C30B8D7568F7ABA"
			]
			id: "7E40EDE45D1B6CC1"
			tasks: [{
				id: "44067E0C0A6CE040"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:quantum_link"
				}
				type: "item"
			}]
			x: -9.5d
			y: 2.0d
		}
		{
			dependencies: [
				"1C761E69DB39289E"
				"6C30B8D7568F7ABA"
			]
			id: "29845B4E040A1F1F"
			tasks: [{
				id: "590F8CDF695C0C35"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:quantum_ring"
				}
				type: "item"
			}]
			x: -9.5d
			y: 4.0d
		}
		{
			dependencies: ["69AF46B1490B34C4"]
			description: [
				"While ME networks are also constructed of adjacent ME-capable devices and machines, cables are the primary way of extending an ME network over longer distances."
				""
				"When refering to importing and exporting, we are always talking about in relation to your storage network. "
				""
				"Stuff gets exported OUT of your network and into things and machines."
				""
				"Stuff gets imported IN to your network from things and machines etc."
				""
				"{@pagebreak}"
				"Different colored cables can be used to ensure other cables do not connect to each other, allowing channels to be distributed more efficiently. They also affect the color of terminals connected to them, so you can use the cable color you use to connect them to choose the color of your terminal.. Fluix cables connect to every other color indiscriminately."
				""
				"{@pagebreak}"
				""
				"If you are new to AE2 and unfamiliar or unsure with channels, &6use smart cable and dense smart cable&r wherever you can. It will show how channels are currently being routed through your network, making their behavior easier to understand and troubleshoot."
				""
				"These are not item or fluid or energy pipes. They have no internal inventory, pattern providers and machines do not \"push\" or \"pull\" things into them, all they do is connect AE2 network components together into an actual network. To import or export items, fluids, etc into or out of this network, you need specicfic components for this, such as &aimporters&r, &9exporters&r and &estorage buses&r."
			]
			hide_dependency_lines: true
			id: "7D214A4E9FBE9A89"
			subtitle: "some basics"
			tasks: [{
				id: "6B9CD362F723B733"
				title: "General cable information."
				type: "checkmark"
			}]
			x: 4.0d
			y: 2.0d
		}
		{
			dependencies: ["7D214A4E9FBE9A89"]
			id: "37B0F1A299218255"
			tasks: [{
				id: "6D01897F5BC07F85"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:certus_quartz_cutting_knife"
					tag: {
						Damage: 0
					}
				}
				type: "item"
			}]
			x: 4.0d
			y: 0.5d
		}
		{
			dependencies: ["37B0F1A299218255"]
			id: "654756E8A407CEDC"
			tasks: [{
				id: "5CA922F48E360D95"
				item: {
					Count: 1
					ForgeCaps: {
						"celestisynth:celestisynthitemstackcapabilities": {
							cs.aquaSkin: 0
						}
					}
					id: "ae2:cable_anchor"
				}
				type: "item"
			}]
			x: 5.5d
			y: 0.5d
		}
		{
			dependencies: ["654756E8A407CEDC"]
			id: "28C4E916AAF94BD0"
			tasks: [{
				id: "1D736CFE5F4B021E"
				title: "Cable Facades"
				type: "checkmark"
			}]
			x: 7.0d
			y: 0.5d
		}
		{
			dependencies: ["1C761E69DB39289E"]
			description: [
				"Quantum Network Bridges can extend a network over infinite distances and even between dimensions. They can only transfer using a finite number of channels in total though (regardless of how cables are connected to each face). For all intents and purposes they function as a wireless dense cable."
				""
				"{@pagebreak}"
				"Quantum Rings are built by surrounding an ME Quantum Link Chamber with ME Quantum Ring blocks and can be built either horizontally or vertically. Then take 2 Quantum Entangled Singularities, place one each within the link chambers of 2 rings you would like to link together. For example one ring for your main storage, linked to a second ring at a resource producing outpost you've built to support your base."
			]
			id: "6C30B8D7568F7ABA"
			subtitle: "Loooong distance logistics"
			tasks: [{
				id: "325CC8EF2680C13E"
				title: "ME Quantum Network Bridge"
				type: "checkmark"
			}]
			x: -9.5d
			y: 3.0d
		}
		{
			description: [
				"The &6&lMinecolonies - Create and Conquer&r&r Modpack is licensed under &eAll Rights Reserved&r."
				""
				"Meaning all content within the modpack, including &l&eQuests&r&r, is protected. As such, this content may &n&l&cNOT&r&r&r be reused or redistributed in any public modpacks not released by &l&6TeamMCC&r&r without explicit permission from the creators."
			]
			disable_toast: true
			hide: true
			hide_details_until_startable: false
			hide_text_until_complete: false
			icon: {
				Count: 1
				ForgeCaps: {
					"celestisynth:celestisynthitemstackcapabilities": {
						cs.aquaSkin: 0
					}
				}
				id: "architects_palette:hazard_sign"
			}
			icon_scale: 2.0d
			id: "1954E44EEC89DE39"
			invisible: true
			optional: true
			tasks: [
				{
					id: "37F13100D916CA68"
					type: "checkmark"
				}
				{
					id: "680D999C3AB77894"
					type: "checkmark"
				}
				{
					id: "4A4699E9B3D8CA4A"
					type: "checkmark"
				}
			]
			title: "&6&lQuests by TeamMCC for the MCC Modpack"
			x: 30.0d
			y: 30.0d
		}
	]
	title: "&eApplied Energistics 2"
}
